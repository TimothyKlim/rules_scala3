"""Repository rules for defining Scala dependencies and toolchains"""

load("//scala3:toolchain.bzl", _scala_toolchain_attrs = "attrs")

# TODO
#def rules_scala3_dependencies():

#
# Remaining content of the file is only used to support toolchains.
#

# buildifier: disable=unnamed-macro
def scala3_register_toolchains(
        scala_version = "latest",
        register_toolchain = True):
    """Creates a set of external toolchain repositories and registers the default toolchain.

    Skip this macro and call the `scala3_define_toolchain` macros directly if you
    what to register a custom toolchain.

    Args:
        scala_version (str, opt): The major version of scala, like 3.2 or latest.
        register_toolchain (bool, opt): If true, the default toolchain will be registered.
    """

    default_toolchain = {
        "name": "scala3_default_toolchain",
        "enable_semanticdb": True,
        "scala_version": scala_version,
    }

    scala3_toolchain_repository(**default_toolchain)

    if register_toolchain:
        native.register_toolchains("@{}//:toolchain".format(
            default_toolchain["name"],
        ))

def _scala3_toolchain_repository_impl(repository_ctx):
    repository_ctx.file("WORKSPACE.bazel", """workspace(name = "{}")""".format(
        repository_ctx.name,
    ))

    # load maven deps, like `rules_scala_toolchain_deps_repositories` does

    build_content = """#Generated by scala3/repositories.bzl
load("@rules_scala3//scala3:toolchain.bzl", "scala_toolchain")

scala_toolchain(
    name = "toolchain_impl",
    enable_semanticdb = {enable_semanticdb},
)

toolchain(
    name = "toolchain",
    toolchain = ":toolchain_impl",
    toolchain_type = "@rules_scala3//scala3:toolchain_type",
)
"""

    repository_ctx.file("BUILD.bazel", build_content.format(
        enable_semanticdb = repository_ctx.attr.enable_semanticdb,
    ))

scala3_toolchain_repository = repository_rule(
    doc = "A repository rule for defining a `scala_toolchain` with its maven dependencies",
    attrs = dict(
        scala_version = attr.string(
            doc = "The major version of scala, like 3.2 or latest.",
            mandatory = True,
        ),
        **_scala_toolchain_attrs
    ),
    implementation = _scala3_toolchain_repository_impl,
)
